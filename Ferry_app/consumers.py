from channels.generic.websocket import AsyncWebsocketConsumer
import json
import logging

# Get a Django logger
logger = logging.getLogger('django')

class NotificationConsumer(AsyncWebsocketConsumer):
    async def connect(self):
        logger.info("‚úÖ WebSocket connect√© : %s", self.channel_name)
        await self.channel_layer.group_add("notifications", self.channel_name)
        logger.info("‚úÖ Client ajout√© au groupe 'notifications' : %s", self.channel_name)
        await self.accept()
    
    async def disconnect(self, close_code):
        logger.info("‚ùå WebSocket d√©connect√© : %s", self.channel_name)
        await self.channel_layer.group_discard("notifications", self.channel_name)
    
    async def receive(self, text_data):
        logger.info("‚úÖ Nouvelle notification re√ßue : %s", text_data)
        # Traitement facultatif ici
    
    async def send_notification(self, event):
     try:
        message = event["message"]
        logger.info("üì® Notification envoy√©e au client : %s", message)
        await self.send(text_data=json.dumps({"message": message}))
     except Exception as e:
        logger.error("‚ùå Erreur lors de l'envoi de la notification: %s", str(e))